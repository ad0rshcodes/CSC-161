Counting Bigrams: Testing Plan

List your test cases below. The first test case is provided so you have an example to work from. Every test should include a short name for the test, a description of what the test case covers, the input you will provide to the program, and the expected output. If your test case focuses on just part of the output you are welcome to abbreviate the expected output (note any omitted parts of the input with "..."). Please leave a blank line between test cases so they are visually separated.

Tests:

1. Short lowercase input
This test checks to make sure the program handles a short input containing only lowercase letters.
Input: "abc"
Expected Output:
"ab": 1
"bc": 1
Most common bigram: 'ab' (No. of times: 1)

2. Input too short for bigrams
This test checks for small inputs that doesn't contain any bigrams.
Input: "a"
Expected Output:
Invalid input. It's too short to contain any bigrams.

3. Repeated bigrams
This test checks if the program correctly counts repeated bigrams.
Input: "ababab"
Expected Output:
"ab": 3
"ba": 2
Most common bigram: 'ab' (No. of times: 3)

4. Mixed case input
This test checks if the program is case-sensitive.
Input: "AbaBa"
Expected Output:
"Ab": 1
"ba": 1
"aB": 1
"Ba": 1
Most common bigram: 'Ab' (No. of times: 1)

5. Input with spaces
This test checks if the program correctly handles spaces.
Input: "hello world"
Expected Output:
' w': 1
'el': 1
'he': 1
'ld': 1
'll': 1
'lo': 1
'o ': 1
'or': 1
'rl': 1
'wo': 1
Most common bigram: 'he' (No. of times: 1)

6. Long input
This test checks if the program can handle longer inputs.
Input: "My name is Adarsh Sharma and I'm a student at Grinnell College studying Computer Science."
Expected Output:
' A': 1
' C': 2
' G': 1
' I': 1
' S': 2
' a': 3
' i': 1
' n': 1
' s': 2
''m': 1
'Ad': 1
'Co': 2
'Gr': 1
'I'': 1
'My': 1
'Sc': 1
'Sh': 1
'a ': 2
'am': 1
'an': 1
'ar': 2
'at': 1
'ce': 1
'ci': 1
'd ': 1
'da': 1
'de': 1
'dy': 1
'e ': 2
'e.': 1
'eg': 1
'el': 1
'en': 2
'er': 1
'g ': 1
'ge': 1
'h ': 1
'ha': 1
'ie': 1
'in': 2
'is': 1
'l ': 1
'le': 1
'll': 2
'm ': 1
'ma': 1
'me': 1
'mp': 1
'na': 1
'nc': 1
'nd': 1
'ne': 1
'ng': 1
'nn': 1
'nt': 1
'ol': 1
'om': 1
'pu': 1
'r ': 1
'ri': 1
'rm': 1
'rs': 1
's ': 1
'sh': 1
'st': 2
't ': 2
'te': 1
'tu': 2
'ud': 2
'ut': 1
'y ': 1
'yi': 1
Most common bigram: ' a' (No. of times: 3)


7. Input with ASCII printable characters
This test checks if the program can handle all printable ASCII characters.
Input: "!"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~"
Expected Output:
'!"': 1
'"#': 1
'#$': 1
'$%': 1
'%&': 1
'&'': 1
''(': 1
'()': 1
')*': 1
'*+': 1
'+,': 1
',-': 1
'-.': 1
'./': 1
'/0': 1
'01': 1
'12': 1
'23': 1
'34': 1
'45': 1
'56': 1
'67': 1
'78': 1
'89': 1
'9:': 1
':;': 1
';<': 1
'<=': 1
'=>': 1
'>?': 1
'?@': 1
'@A': 1
'AB': 1
'BC': 1
'CD': 1
'DE': 1
'EF': 1
'FG': 1
'GH': 1
'HI': 1
'IJ': 1
'JK': 1
'KL': 1
'LM': 1
'MN': 1
'NO': 1
'OP': 1
'PQ': 1
'QR': 1
'RS': 1
'ST': 1
'TU': 1
'UV': 1
'VW': 1
'WX': 1
'XY': 1
'YZ': 1
'Z[': 1
'[\': 1
'\]': 1
']^': 1
'^_': 1
'_`': 1
'`a': 1
'ab': 1
'bc': 1
'cd': 1
'de': 1
'ef': 1
'fg': 1
'gh': 1
'hi': 1
'ij': 1
'jk': 1
'kl': 1
'lm': 1
'mn': 1
'no': 1
'op': 1
'pq': 1
'qr': 1
'rs': 1
'st': 1
'tu': 1
'uv': 1
'vw': 1
'wx': 1
'xy': 1
'yz': 1
'z{': 1
'{|': 1
'|}': 1
'}~': 1
Most common bigram: '!"' (No. of times: 1)

8. Input with no characters
This test checks if the program can handle no input without any infinite loops or errors.
Input: ""
Expected Output:
Invalid input. It's too short to contain any bigrams.